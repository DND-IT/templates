name: Infrastructure

on:
  push:
    branches: [main]
    paths:
      - "deploy/infrastructure/**"
      - ".github/workflows/infrastructure.yaml"

  pull_request:
    branches: [main]
    paths:
      - "deploy/infrastructure/**"
      - ".github/workflows/infrastructure.yaml"

  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        include:
          {%- for env, values in cookiecutter.environments.items() %}
          - environment: @{{ env }}
          - aws-account-id: @{{ values.aws_account_id }}
          - aws_region: @{{ values.tf_state_region }}
          - aws_role_name: @{{ values.aws_role_name }}
          {%- endfor %}
    uses: tx-pts-dai/github-workflows/.github/workflows/tf-plan.yaml@v1
    with:
      aws_region: ${{ matrix.aws_region }}
      aws_oidc_role_arn: arn:aws:iam::${{ matrix.aws-account-id }}:role/${{ matrix.aws_role_name }}
      tf_dir: "deploy/infrastructure"
      tf_backend_config_files: "deploy/infrastructure/environments/${{ matrix.environment }}.s3.tfbackend"
      tf_var_files: "deploy/infrastructure/${{ matrix.environment }}.tfvars"

  apply:
    if: github.ref_name == github.event.repository.default_branch && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        include:
          {%- for env, values in cookiecutter.environments.items() %}
          - environment: @{{ env }}
          - aws-account-id: @{{ values.aws_account_id }}
          - aws_region: @{{ values.tf_state_region }}
          - aws_role_name: @{{ values.aws_role_name }}
          {%- endfor %}
    uses: tx-pts-dai/github-workflows/.github/workflows/tf-apply.yaml@v1
    with:
      aws_region: ${{ matrix.aws_region }}
      aws_oidc_role_arn: arn:aws:iam::${{ matrix.aws-account-id }}:role/${{ matrix.aws_role_name }}
      tf_dir: deploy/infrastructure
      tf_backend_config_files: "deploy/infrastructure/environments/${{ matrix.environment }}.s3.tfbackend"
      tf_var_files: "deploy/infrastructure/environments/${{ matrix.environment }}.tfvars"
